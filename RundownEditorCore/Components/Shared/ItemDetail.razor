@inject KafkaService KafkaService
@inject RundownState RundownState

<div>
    <div class="card mb-3 d-inline-block">
        <div class="card-header d-flex justify-content-between @color">
            @Detail.Title<i class="ms-5 bi @icon"></i>
        </div>
        <div class="p-0">
            <div class="input-group">
                <span class="input-group-text rounded-0 @color">Duration</span>
                <input id="duration" type="time" class="form-control form-control-sm" step="1" value="@Detail.Duration" disabled="@active">
                <button class="btn  rounded-0 @color" type="button" @onclick="() => ActivateInput()"><i class="bi @(active ? "bi-pencil-fill" : "bi-floppy-fill")"></i></button>
            </div>
        </div>
        <div class="card-body py-2 d-flex flex-row">

     
              
             
                <div contenteditable="true">
                @content
             </div>
          
        </div>
    </div>
</div>

@code{
    [Parameter]
    public DetailDTO Detail { get; set; }
    public string icon { get; set; }
    public string color { get; set; }
    public string content { get; set; }
    public bool active = true;
    public bool locked = false;

    protected override Task OnInitializedAsync()
    {
        
        return base.OnInitializedAsync();
    }

    public void ActivateInput()
    {
        active = !active;
        var messageObject = new
        {
            Action = "locked",
            Locked = !active,
            Detail = Detail.UUID.ToString(),
            Rundown = RundownState.Rundown.Uuid.ToString(),
            Item = Detail.ItemId.ToString()

        };
        string message = JsonSerializer.Serialize(messageObject);
        KafkaService.SendMessage("rundown_story", message);


    }

    protected override void OnInitialized()
    {
        icon = Detail.Type switch
        {
            "Kamera" => "bi-camera-video",
            "Teleprompter" => "bi-card-text",
            "Grafik" => "bi-palette",
            "Video" => "bi-film",
            "Voiceover" => "bi-badge-vo",
            "Kommentar" => "bi-chat-right-text",
            _ => "bi-x-square"
        };
        color = Detail.Type switch
        {
            "Kamera" => "list-group-item-warning",
            "Teleprompter" => "list-group-item-danger",
            "Grafik" => "list-group-item-warning",
            "Video" => "list-group-item-success",
            "Voiceover" => "list-group-item-danger",
            "Kommentar" => "list-group-item-primary",
            _ => "list-group-item-secondary"
        };

        content = Detail.Type switch
        {
            "Kamera" => "Kamera",
            "Teleprompter" => Detail.PrompterText ?? "Prompter text not found",
            "Grafik" => Detail.GraphicId ?? "Graphic element not found",
            "Video" => Detail.VideoPath ?? "Videopath not found",
            "Voiceover" => Detail.PrompterText ??  "Voiceover text not found",
            "Kommentar" => Detail.Comment ??  "Comment not found",
            _ => "Ukendt"
        };
    }    
  
}
