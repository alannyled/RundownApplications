// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RundownDbService.Data;

#nullable disable

namespace RundownDbService.Migrations
{
    [DbContext(typeof(RundownDbContext))]
    [Migration("20240920134728_AddRundownControlRoomRelation")]
    partial class AddRundownControlRoomRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControlRoomHardware", b =>
                {
                    b.Property<int>("ControlRoomsId")
                        .HasColumnType("int");

                    b.Property<int>("HardwaresHardwareId")
                        .HasColumnType("int");

                    b.HasKey("ControlRoomsId", "HardwaresHardwareId");

                    b.HasIndex("HardwaresHardwareId");

                    b.ToTable("ControlRoomHardwares", (string)null);
                });

            modelBuilder.Entity("RundownDbService.Data.ControlRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ControlRooms");
                });

            modelBuilder.Entity("RundownDbService.Data.Hardware", b =>
                {
                    b.Property<int>("HardwareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HardwareId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DnsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Port")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubnetMask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HardwareId");

                    b.ToTable("Hardwares");
                });

            modelBuilder.Entity("RundownDbService.Data.Rundown", b =>
                {
                    b.Property<int>("RundownId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RundownId"));

                    b.Property<DateTime>("ArchivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ControlRoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RundownDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RundownName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RundownType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RundownId");

                    b.HasIndex("ControlRoomId");

                    b.ToTable("Rundowns");
                });

            modelBuilder.Entity("RundownDbService.Data.TeleprompterTest", b =>
                {
                    b.Property<int>("TeleprompterTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeleprompterTestId"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeleprompterTestId");

                    b.ToTable("TeleprompterTests");
                });

            modelBuilder.Entity("RundownDbService.Data.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("RundownDbService.Data.Video", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VideoId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("Duration")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VideoId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("RundownVideo", b =>
                {
                    b.Property<int>("RundownsRundownId")
                        .HasColumnType("int");

                    b.Property<int>("VideoObjectsVideoId")
                        .HasColumnType("int");

                    b.HasKey("RundownsRundownId", "VideoObjectsVideoId");

                    b.HasIndex("VideoObjectsVideoId");

                    b.ToTable("RundownVideos", (string)null);
                });

            modelBuilder.Entity("ControlRoomHardware", b =>
                {
                    b.HasOne("RundownDbService.Data.ControlRoom", null)
                        .WithMany()
                        .HasForeignKey("ControlRoomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RundownDbService.Data.Hardware", null)
                        .WithMany()
                        .HasForeignKey("HardwaresHardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RundownDbService.Data.Rundown", b =>
                {
                    b.HasOne("RundownDbService.Data.ControlRoom", "ControlRoom")
                        .WithMany("Rundowns")
                        .HasForeignKey("ControlRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlRoom");
                });

            modelBuilder.Entity("RundownVideo", b =>
                {
                    b.HasOne("RundownDbService.Data.Rundown", null)
                        .WithMany()
                        .HasForeignKey("RundownsRundownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RundownDbService.Data.Video", null)
                        .WithMany()
                        .HasForeignKey("VideoObjectsVideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RundownDbService.Data.ControlRoom", b =>
                {
                    b.Navigation("Rundowns");
                });
#pragma warning restore 612, 618
        }
    }
}
