@page "/"

@using MediaRelationApp.Services
@using MediaRelationApp.Components.Shared
@using MediaRelationApp.DTO
@inject ApiService ApiService

<Modal @bind-ShowModal="IsModalVisible" OnFileSave="SaveChanges"></Modal>
<p class="lead text-warning fixed-top">@statusMessage</p>
<h1 class="text-center text-info">Fuse til rækkefølge</h1>
<div class="row" style="opacity:@(IsModalVisible ? "0.3" : "1")">
    <div class="col-4 p-4">
        <h5 class="text-center">Rækkefølger</h5>
        @if (Rundowns?.Count > 0)
        {
            @foreach (var rundown in Rundowns)
            {
                <div class="@GetCardClass(Guid.Parse(rundown.UUID))" @onclick="() => SelectRundown(Guid.Parse(rundown.UUID))">
                    <div class="card-body">
                        <strong>@rundown.Name</strong><br />
                        <span>Udsendelse: @rundown.BroadcastDate.ToString("dd. MMMM yyyy")</span><br />
                        <span>Kontrolrum: @rundown.ControlRoomName</span>
                    </div>
                </div>
            }
        }
        else
        {
            <p class="text-center"><em>@rundownMessage</em></p>
            <button class="btn btn-sm btn-primary w-100 @(!IsRetryButtonVisible ? "d-none" : "")" @onclick="RetryGetRundowns">Prøv igen</button>
        }
    </div>
    <div class="col-4 p-4">
        <h5 class="text-center">Historier</h5>
        @if (Stories?.Count > 0)
        {
            @foreach (var story in Stories)
            {
                <div class="@GetCardClass(story.UUID)" @onclick="() => SelectStory(story.UUID)">
                    <div class="card-body">
                        <strong>@story.Name</strong><br />
                        <span>Antal videoer: @story.Details.Count(d => d.Type == "Video")</span>
                    </div>
                </div>
            }
        }
        else
        {
            <p class="text-center"><em>@storyMessage</em></p>
        }
    </div>
    <div class="col-4 p-4">
        <h5 class="text-center">Videoer</h5>
        @if (Details?.Count > 0)
        {
            @foreach (var detail in Details)
            {
                if (detail.Type == "Video")
                {
                    <div class="@GetCardClass(detail.UUID)">
                        <div class="card-body" @onclick="() => SelectDetail(detail.UUID)">
                            <strong>@detail.Title</strong><br />
                            <span>Varighed: @detail.Duration</span>
                        </div>
                    </div>
                }
            }
        }
        else
        {
            <p class="text-center"><em>@detailMessage</em></p>
        }
    </div>
</div>



@code {
    public List<RundownDTO> Rundowns { get; set; } = [];
    public List<RundownStoryDTO> Stories { get; set; } = [];
    public List<DetailDTO> Details { get; set; } = [];

    public string rundownMessage = "Henter rækkefølger...";
    public string storyMessage = string.Empty;
    public string detailMessage = string.Empty;
    public string statusMessage = string.Empty;

    private Guid SelectedRundownUuid { get; set; }
    private Guid SelectedStoryUuid { get; set; }
    private Guid SelectedDetailUuid { get; set; }

    private bool IsModalVisible { get; set; } = false;
    private bool IsRetryButtonVisible { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        await GetRundowns();
    }

    public async Task GetRundowns()
    {
        var rundowns = await ApiService.GetRundownsAsync();
        if (rundowns != null)
        {
            Rundowns = rundowns;
            rundownMessage = "Ingen rækkefølger fundet";
            IsRetryButtonVisible = true;
        }
        else
        {
            storyMessage = "Vælg en rækkefølge for at se historier.";
            IsRetryButtonVisible = false;
        }
    }
    public async Task RetryGetRundowns()
    {
        IsRetryButtonVisible = false;
        rundownMessage = "Forsøger igen...";
        await GetRundowns();
    }

    public async Task SaveChanges(string file)
    {
        var detail = Details.FirstOrDefault(d => d.UUID == SelectedDetailUuid);
        if (detail == null) return;

        detail.VideoPath = file;
        var response = await ApiService.UpdateDetailAsync(SelectedRundownUuid.ToString(), detail);
        if (response != null)
        {
            Stories = [];
            Details = [];
            statusMessage = "Kæmpe succes!";
        }
        else
        {
            statusMessage = "Kæmpe fiasko!";
        }
        IsModalVisible = false;
        SelectedRundownUuid = Guid.Empty;
       
        
    }

    public void SelectRundown(Guid uuid)
    {
        SelectedRundownUuid = uuid;
        SelectedStoryUuid = Guid.Empty; 
        detailMessage = string.Empty;
        statusMessage = string.Empty;
        Details = [];
        OpenStories(uuid);
    }

    public void SelectStory(Guid uuid)
    {
        SelectedStoryUuid = uuid;
        SelectedDetailUuid = Guid.Empty;        
        OpenDetails(uuid); 
    }

    public void SelectDetail(Guid uuid)
    {
        SelectedDetailUuid = uuid;
        IsModalVisible = true;
    }

    public string GetCardClass(Guid uuid)
    {
        if (uuid == SelectedRundownUuid || uuid == SelectedStoryUuid || uuid == SelectedDetailUuid)
        {
            return "card bg-black border border-primary mb-2";
        }
        return "card bg-transparent border border-light mb-2";
    }

    public void OpenStories(Guid uuid)
    {
        Stories = Rundowns
            .Where(r => Guid.Parse(r.UUID) == uuid)
            .SelectMany(r => r.Stories)
            .ToList();
        storyMessage = Stories.Count == 0 ? "Der er ingen historier i denne rækkefølge." : string.Empty;
        detailMessage = Stories.Count > 0 ? "Vælg en historie for at se videoer" : string.Empty;
        
        StateHasChanged();
    }

    public void OpenDetails(Guid uuid)
    {
        Details = Stories
            .Where(s => s.UUID == uuid)
            .SelectMany(s => s.Details)
            .ToList();
        detailMessage = Details.Count == 0 ? "Der er ingen videoer i denne historie." : string.Empty;
        StateHasChanged();
    }

}

