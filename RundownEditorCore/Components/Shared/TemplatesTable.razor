@using Polly
@using Polly.Extensions.Http
@using Polly.Retry
@using RundownEditorCore.Interfaces
@using RundownEditorCore.DTO

@inject IHttpClientFactory ClientFactory
@inject ITemplateService TemplateService



@if (isLoading)
{
    <p><em>Loading...</em></p>
}
else
{
      <div class="table-responsive">
    <table class="table table-sm table-striped">
        <thead>
            <tr>
                
                <th>Name</th>
                <th>Oprettet dato</th>
                @* <th>ID</th> *@

            </tr>
        </thead>
        <tbody>
            @foreach (var template in Templates)
            {
                    <tr role="button" @onclick="() => SelectTemplate(template.Uuid.ToString())">

                    <td class="text-nowrap">@template.Name</td>
                        <td class="text-nowrap">@template.CreatedDate.ToLocalTime().ToString("dddd d. MMMM yyyy")</td>
                    @* <td >@template.Uuid.ToString()</td> *@

                </tr>
            }
        </tbody>
    </table>
    </div>
}

@code {

    // [Parameter]
    // public EventCallback<string> OnTemplateSelect { get; set; }
     
    [Parameter]
    public List<TemplateDTO> Templates { get; set; }
    private bool isLoading = true;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        if (Templates != null && Templates.Count > 0)
        {
            isLoading = false;
        }
    }

    private async Task SelectTemplate(string uuid)
    {

        //await OnTemplateSelect.InvokeAsync(uuid);
    }
}
