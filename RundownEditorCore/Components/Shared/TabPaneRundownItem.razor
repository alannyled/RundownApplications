@inject ModalState ModalState
@inject RundownState RundownState
@inject FormRenderService FormRenderservice

<div class="tab-pane @(ActiveTab == RundownState.Item.Name ? "show active" : "fade")">
    <div class="card card-height-100 mb-2">
        <div class="card-header d-flex justify-content-between bg-danger text-white">
            <h5 class="mb-0">@RundownState.Item.Name</h5>
            <h5 class="mb-0" role="button" @onclick="RemoveTabPane"><i class="bi bi-x-square"></i></h5>
        </div>

        <div class="card-header">
            <div class="d-flex">
                <button role="button" class="btn btn-sm btn-outline-danger py-0 me-1 fs-5" @onclick='() => AddSelected("Kamera")'><i class="bi bi-camera-video"></i></button>
                <button role="button" class="btn btn-sm btn-outline-danger py-0 me-1 fs-5" @onclick='() => AddSelected("Teleprompter")'><i class="bi bi-card-text"></i></button>
                <button role="button" class="btn btn-sm btn-outline-danger py-0 me-1 fs-5" @onclick='() => AddSelected("Grafik")'><i class="bi bi-palette"></i></button>
                <button role="button" class="btn btn-sm btn-outline-danger py-0 me-1 fs-5" @onclick='() => AddSelected("Video")'><i class="bi bi-film"></i></button>
                <button role="button" class="btn btn-sm btn-outline-danger py-0 me-1 fs-5" @onclick='() => AddSelected("Voiceover")'><i class="bi bi-badge-vo"></i></button>
                <button role="button" class="btn btn-sm btn-outline-danger py-0 me-1 fs-5" @onclick='() => AddSelected("Kommentar")'><i class="bi bi-chat-right-text"></i></button>
            </div>
        </div>

        <div class="card-body" contenteditable="true">

            <ItemDetail></ItemDetail>

        </div>

    </div>
</div>
@code {
    [Parameter]
    public string ActiveTab { get; set; } = string.Empty;
    // [Parameter]
    // public string Name { get; set; } = "Unknown Name";
    // [Parameter]
    // public string ItemID { get; set; }

    [Parameter]
    public EventCallback<string> OnRemove { get; set; } 

    [Parameter]
    public EventCallback ShowDialog { get; set; }

    public async Task RemoveTabPane()
    {
        await OnRemove.InvokeAsync(RundownState.Item.Name);
    }
    public void AddSelected(string type)
    {
        var content = new RenderFragment(builder =>
       {
           builder.AddContent(0, FormRenderservice.RenderItemDetailForm(
               type,
               EventCallback.Factory.Create<RundownDTO>(this, HandleItemDetailCreated)
           ));
       });

        ModalState.SetContent(content, $"Opret {type} element");
    }

    public void HandleItemDetailCreated()
    {
        Console.WriteLine("Detail creating in play here : " + RundownState.Item.UUID);
    }
}

