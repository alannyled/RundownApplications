@using RundownEditorCore.DTO
@using RundownEditorCore.Interfaces

<form @onsubmit="HandleSubmit">
    <div class="mb-3">
        <label for="broadcastdate" class="form-label">Udsendelsedato</label>
        <input type="date" id="broadcastdate" class="form-control form-control-sm"
               @bind="BroadcastDate" />
    </div>

    <div class="mb-3">
        <label for="category" class="form-label">Skabelon</label>
        <select id="category" class="form-control form-control-sm"
                @bind="Template">
            <option value="">Vælg en Skabelon</option>
            @foreach (var template in Templates)
            {
                <option value="@template.Uuid">@template.Name</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label for="controlroom" class="form-label">Kontrolrum</label>
        <select id="controlroom" class="form-control form-control-sm"
                @bind="ControlRoom">
            <option value="">Vælg kontrolrum</option>
            @foreach (var controlroom in ControlRooms)
            {
                <option value="@controlroom.Uuid">@controlroom.Name</option>
            }
        </select>
    </div>
    <div class="d-flex justify-content-end">
        <button type="submit" class="btn btn-sm btn-primary">Opret rækkefølge</button>
    </div>
</form>

@code {
    [Inject]
    private IRundownService RundownService { get; set; }

    [Parameter]
    public List<TemplateDTO> Templates { get; set; } = new List<TemplateDTO>();
    [Parameter]
    public List<ControlRoomDTO> ControlRooms { get; set; } = new List<ControlRoomDTO>();
    [Parameter]
    public DateTime BroadcastDate { get; set; } = DateTime.Now;
    [Parameter]
    public EventCallback<CreateRundownResultDTO> OnRundownCreated { get; set; }



    public string Template { get; set; } = string.Empty;
    public string ControlRoom { get; set; } = string.Empty;

  

    private async Task HandleSubmit()
    {
        // Lav rundown og hent aktive rundowns
        var rundown = await RundownService.CreateRundownFromTemplate(Template, ControlRoom, BroadcastDate);
        var activeRundowns = await RundownService.GetRundownsAsync();

        // Indstil værdier og send resultatet til moderkomponenten
        var result = new CreateRundownResultDTO
            {
                ActiveRundowns = activeRundowns,
                SelectedRundown = rundown
            };

        await OnRundownCreated.InvokeAsync(result);
    }
}
