services:
  controlroom-primary-database:
    image: mongo
    container_name: controlroom-primary-database
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - controlroom-mongo-data:/data/db
    #command: mongod --replSet controlroom-replica-set --bind_ip_all
    networks:
      - shared-mongo-net

  controlroom-secondary-database:
    image: mongo
    container_name: controlroom-secondary-database
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - controlroom-mongo-data-secondary:/data/db
    #command: mongod --replSet controlroom-replica-set --bind_ip_all
    networks:
      - shared-mongo-net

  rundown-primary-database:
    image: mongo
    container_name: rundown-primary-database
    restart: always
    ports:
      - "27027:27017"
    volumes:
      - rundown-mongo-data:/data/db
    #command: mongod --replSet rundown-replica-set --bind_ip_all
    networks:
    - shared-mongo-net


  rundown-secondary-database:
    image: mongo
    container_name: rundown-secondary-database
    restart: always
    ports:
      - "27028:27017"
    volumes:
      - rundown-mongo-data-secondary:/data/db
    #command: mongod --replSet rundown-replica-set --bind_ip_all
    networks:
      - shared-mongo-net

  # rundown-init-replica-set:
  #   image: mongo:4.4-bionic
  #   depends_on:
  #   - rundown-primary-database
  #   - rundown-secondary-database
  #   command: >
  #     bash -c "sleep 10 && mongo --host rundown-primary-database:27027 --eval 'rs.initiate({_id: \"rundown-replica-set\", members: [{_id: 0, host: \"rundown-primary-database:27027\"}, {_id: 1, host: \"rundown-secondary-database:27028\"}]})'"
  #   networks:
  #   - shared-mongo-net 


  template-primary-database:
    image: mongo
    container_name: template-primary-database
    restart: always
    ports:
      - "27037:27017"
    volumes:
      - template-mongo-data:/data/db
    #command: mongod --replSet template-replica-set --bind_ip_all
    networks:
      - shared-mongo-net

  template-secondary-database:
    image: mongo
    container_name: template-secondary-database
    restart: always
    ports:
      - "27038:27017"
    volumes:
      - template-mongo-data-secondary:/data/db
    #command: mongod --replSet template-replica-set --bind_ip_all
    networks:
      - shared-mongo-net

  zookeeper:
    image: bitnami/zookeeper:latest 
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka:latest 
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  shared-mongo-net:
    driver: bridge

volumes:
  controlroom-mongo-data:
    driver: local
  controlroom-mongo-data-secondary:
    driver: local
  rundown-mongo-data:
    driver: local
  rundown-mongo-data-secondary:
    driver: local
  template-mongo-data:
    driver: local
  template-mongo-data-secondary:
    driver: local
