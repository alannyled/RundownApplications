<div id="modal-backdrop" class="modal-backdrop fade @(ShowDialog ? "show" : "")"></div>

<div class="modal fade @(ShowDialog ? "show" : "none")" style='display:@(ShowDialog ? "block" : "none")' @onclick="CloseDialog" tabindex="-1">
    <div class="modal-dialog" style="margin: 10rem auto">
        <div class="modal-content" @onclick:stopPropagation>
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="btn-close" @onclick="CloseDialog"></button>
            </div>
            <div class="modal-body">
                @ChildContent
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-primary" @onclick="CloseDialog">Luk</button>
                <button class="btn btn-sm btn-success" @onclick="SaveDialog">Gem</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public string Title { get; set; } = "Unknown";

    [Parameter]
    public bool ShowDialog { get; set; }
    [Parameter]
    public EventCallback SaveChanges { get; set; }

    [Parameter]
    public EventCallback<bool> ShowDialogChanged { get; set; }

    private void CloseDialog()
    {
        ShowDialog = false;
        ShowDialogChanged.InvokeAsync(ShowDialog);
    }

    private void SaveDialog()
    {
        SaveChanges.InvokeAsync();
    }
}
