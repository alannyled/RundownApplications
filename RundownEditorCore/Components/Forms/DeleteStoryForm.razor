@inject ModalState ModalState
@inject RundownState RundownState
@inject ToastState ToastState
@inject ILogger<TabPaneRundown> Logger
@inject IRundownService RundownService

<form @onsubmit="HandleSubmit">

    <div class="d-flex justify-content-end">
        <button type="submit" class="btn btn-sm btn-danger">Slet @Story.Name</button>
    </div>
</form>

@code {
    [Parameter]
    public RundownStoryDTO Story { get; set; } = new();

    private async Task HandleSubmit()
    {
        if (Story.RundownId == null)
        {
            Logger.LogError("RundownId er null. Kan ikke fjerne historien.");
            return;
        }

        var rundown = RundownState.Rundown;

        if (rundown.Stories.Contains(Story))
        {
            rundown.Stories.Remove(Story);
         
            string msg = $"Historien {Story.Name} blev fjernet fra {RundownState.Rundown.Name}. Åbne versioner lukkes.";
            ToastState.FireToast(msg, "text-bg-info");
            Logger.LogWarning(msg);
        }
        else
        {
            Logger.LogError("Historie blev ikke fundet i listen.");
            return;
        }

        try
        {
            await RundownService.UpdateRundownAsync(Story.RundownId, rundown);
        }
        catch (Exception ex)
        {
            Logger.LogError($"Fejl ved opdatering af Rundown: {ex.Message}");
            Logger.LogDebug($"StackTrace: {ex.StackTrace}");
        }

        ModalState.Close();
    }


}
