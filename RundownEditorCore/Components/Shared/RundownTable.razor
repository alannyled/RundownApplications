
@using RundownEditorCore.DTO
@using RundownEditorCore.Interfaces
@inject IRundownService RundownService


@if (isLoading)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-responsive">
    <table class="table table-sm table-striped">
        <thead>
            <tr>
                
                <th>Navn</th>
                <th>Udsendelses dato</th>
                <th>Kontrolrum</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var rundown in Rundowns){
                if(rundown.BroadcastDate.Date >= SelectedDate.Date)
                {
                    <tr role="button" @onclick="() => OpenThisRundown(rundown.Uuid.ToString())">

                            <td class="text-nowrap">@rundown.Name</td>
                            <td class="text-nowrap">@rundown.BroadcastDate.ToString("dddd d. MMMM yyyy")</td>
                            <td class="text-nowrap">@rundown.ControlRoomName</td>
                   

                    </tr>
                }
            }
        </tbody>
    </table>
    </div>
}

@code {
    [Parameter]
    public EventCallback<string> OpenRundown { get; set; }
    [Parameter]
    public List<RundownDTO>? Rundowns { get; set; }
    [Parameter]
    public DateTime SelectedDate { get; set; }

   // private List<RundownDTO>? rundowns;
    private bool isLoading = true;
    private string? errorMessage;

    public async Task OpenThisRundown(string uuid)
    {
        await OpenRundown.InvokeAsync(uuid);
    }

    protected override async Task OnInitializedAsync()
    {
        if (!isLoading) return;

        try
        {
            Rundowns = await RundownService.GetActiveRundowsAsync();
    

        }
        catch (HttpRequestException httpEx)
        {
            errorMessage = $"Fejl ved hentning af data: {httpEx.Message}";
        }
        catch (Exception ex)
        {
            errorMessage = $"En uventet fejl opstod: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
   


}
